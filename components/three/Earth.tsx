/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useEffect, useRef, useState } from 'react'
import { Html, useGLTF } from '@react-three/drei'
import { Object3D, RGBA_ASTC_10x5_Format, Vector3 } from 'three'
import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'
import { useFrame } from '@react-three/fiber'

export default function Model() {
  const group = useRef<THREE.Group>()
  const group_moon = useRef<THREE.Group>()
  const [model, setModel] = useState<Object3D | null>(null)
  const [moonModel, setMoonModel] = useState<Object3D | null>(null)

  useEffect(() => {
    const loader = new GLTFLoader()
    loader.load('Earth.glb', async (glb) => {
      const nodes = await glb.parser.getDependencies('node')
      setModel(nodes[0])
    })
    loader.load('Moon.glb', async (glb) => {
      const nodes = await glb.parser.getDependencies('node')
      setMoonModel(nodes[0])
    })
  }, [])

  const [currentOrbitDegree, setCurrentOrbitDegree] = useState(0.0)
  const [timer, setTimer] = useState(0.0)

  useFrame((state, delta) => {
    if (group.current) {
      group.current.rotation.y += 0.1 * delta
    }
    if (group_moon.current) {
      /*let radians = currentOrbitDegree * (Math.PI / 180)
      let x = (Math.cos(radians) * 250) + 300
      let y = (Math.sin(radians) * 250) + -200
      group_moon.current.position.x = x
      group_moon.current.position.y = y
      setCurrentOrbitDegree(currentOrbitDegree + 1)*/
      setTimer(timer + (delta * 0.5))
      let x = -Math.cos(timer) * 300 + 300
      let z = -Math.sin(timer) * 300 + -100
      group_moon.current.position.x = x
      group_moon.current.position.y = -200
      group_moon.current.position.z = z
      group_moon.current.rotation.y += 0.1 * delta
    }
  })

  return (
    <>
      {(model && moonModel) ? (
        <>
          <group ref={group_moon} position={[300, -200, -100]} scale={0.1}>
            <primitive ref={group} name={'Moon_Object0'} object={moonModel} />
          </group>
          <group ref={group} position={[300, -200, -100]} scale={0.2}>
            <primitive ref={group} name={'Earth_Object0'} object={model} />
          </group>
        </>
      ) : (
        <Html>Loading...</Html>
      )}
    </>
  )
}

useGLTF.preload('/Earth.glb')
