/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useEffect, useRef, useState } from 'react'
import { Html, useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'
import { Object3D } from 'three'
import { useFrame } from '@react-three/fiber'

type GLTFResult = GLTF & {
  nodes: {
    glass_panel: THREE.Mesh
    desktop001: THREE.Mesh
    screen: THREE.Mesh
  }
  materials: {
    ['palette.001']: THREE.MeshPhysicalMaterial
    ['palette.002']: THREE.MeshStandardMaterial
    ['palette.003']: THREE.MeshBasicMaterial
  }
}

export default function Model({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const [model, setModel] = useState<Object3D[] | null>(null)

  useEffect(() => {
    const loader = new GLTFLoader()
    loader.load('me.glb', async (glb) => {
      const nodes = await glb.parser.getDependencies('node')
      setModel(nodes)
    })
  }, [])

  useFrame((state, delta) => {
    let myModel = group.current
    if (myModel) {
      myModel.rotation.y += 1 * delta
    }
  })

  return (
    <>
      {model ? (
        <group ref={group} {...props}>
          {model.forEach((m) => (m.castShadow = true))}
          <primitive ref={group} name={'side_glass'} object={model[0]} />
          <primitive ref={group} name={'desktop'} object={model[1]} />
          <primitive ref={group} name={'scree'} object={model[2]} />
        </group>
      ) : (
        <Html>Loading...</Html>
      )}
    </>
  )
}

/*
<group ref={group} {...props} dispose={null}>
      <mesh
        geometry={nodes.glass_panel.geometry}
        material={materials['palette.001']}
        position={[-1.57, -2, -2.08]}
        rotation={[Math.PI / 2, 0, 1.56]}
      />
      <mesh
        geometry={nodes.desktop001.geometry}
        material={materials['palette.002']}
        position={[-1.57, -2, -2.08]}
        rotation={[Math.PI / 2, 0, 1.56]}
      />
      <mesh
        geometry={nodes.screen.geometry}
        material={materials['palette.003']}
        position={[-1.57, -2, -2.08]}
        rotation={[Math.PI / 2, 0, 1.56]}
      />
    </group>
*/

useGLTF.preload('/me.glb')
